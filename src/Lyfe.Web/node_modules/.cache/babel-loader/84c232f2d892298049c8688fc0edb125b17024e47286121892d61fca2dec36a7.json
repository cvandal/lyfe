{"ast":null,"code":"export async function get(url, token) {\n  const response = await fetch(url, {\n    method: \"GET\",\n    headers: {\n      \"Authorization\": `Bearer ${token}`,\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  return response.ok ? await response.json() : alert(\"Fuck\");\n}\nexport async function post(url, token, body) {\n  const response = await fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Authorization\": `Bearer ${token}`,\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(body)\n  });\n  return response.ok ? await response.json() : alert(\"Fuck\");\n}\nexport async function deleteFromApi(url, token) {\n  const response = await fetch(url, {\n    method: \"DELETE\",\n    headers: {\n      \"Authorization\": `Bearer ${token}`,\n      \"Content-Type\": \"application/json\"\n    }\n  });\n  return response.ok ? await response.json() : alert(\"Fuck\");\n}","map":{"version":3,"names":["get","url","token","response","fetch","method","headers","ok","json","alert","post","body","JSON","stringify","deleteFromApi"],"sources":["/home/chris/repos/lyfe/src/Lyfe.Web/src/Repository.tsx"],"sourcesContent":["import { Day } from \"./Interfaces/Day\";\nimport { Exercise } from \"./Interfaces/Exercise\";\nimport { Weight } from \"./Interfaces/Weight\";\n\nexport async function get(url: string, token: string) {\n  const response = await fetch(url, {\n    method: \"GET\",\n    headers: {\n      \"Authorization\": `Bearer ${token}`,\n      \"Content-Type\": \"application/json\"\n    }\n  })\n\n  return response.ok ? await response.json() : alert(\"Fuck\");\n}\n\nexport async function post(url: string, token: string, body: Day | Exercise | Weight) {\n  const response = await fetch(url, {\n    method: \"POST\",\n    headers: {\n      \"Authorization\": `Bearer ${token}`,\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(body),\n  })\n\n  return response.ok ? await response.json() : alert(\"Fuck\");\n}\n\nexport async function deleteFromApi(url: string, token: string) {\n  const response = await fetch(url, {\n    method: \"DELETE\",\n    headers: {\n      \"Authorization\": `Bearer ${token}`,\n      \"Content-Type\": \"application/json\"\n    }\n  })\n\n  return response.ok ? await response.json() : alert(\"Fuck\");\n}\n"],"mappings":"AAIA,OAAO,eAAeA,GAAGA,CAACC,GAAW,EAAEC,KAAa,EAAE;EACpD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,EAAE;IAChCI,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACP,eAAe,EAAG,UAASJ,KAAM,EAAC;MAClC,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EAEF,OAAOC,QAAQ,CAACI,EAAE,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE,GAAGC,KAAK,CAAC,MAAM,CAAC;AAC5D;AAEA,OAAO,eAAeC,IAAIA,CAACT,GAAW,EAAEC,KAAa,EAAES,IAA6B,EAAE;EACpF,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,EAAE;IAChCI,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MACP,eAAe,EAAG,UAASJ,KAAM,EAAC;MAClC,cAAc,EAAE;IAClB,CAAC;IACDS,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACF,IAAI;EAC3B,CAAC,CAAC;EAEF,OAAOR,QAAQ,CAACI,EAAE,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE,GAAGC,KAAK,CAAC,MAAM,CAAC;AAC5D;AAEA,OAAO,eAAeK,aAAaA,CAACb,GAAW,EAAEC,KAAa,EAAE;EAC9D,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACH,GAAG,EAAE;IAChCI,MAAM,EAAE,QAAQ;IAChBC,OAAO,EAAE;MACP,eAAe,EAAG,UAASJ,KAAM,EAAC;MAClC,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;EAEF,OAAOC,QAAQ,CAACI,EAAE,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE,GAAGC,KAAK,CAAC,MAAM,CAAC;AAC5D"},"metadata":{},"sourceType":"module","externalDependencies":[]}