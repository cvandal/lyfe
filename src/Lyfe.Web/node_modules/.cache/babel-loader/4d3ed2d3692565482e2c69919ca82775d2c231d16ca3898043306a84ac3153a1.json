{"ast":null,"code":"var _jsxFileName = \"/home/chris/repos/lyfe/src/Lyfe.Web/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport { Card, Col, Container, Row } from \"react-bootstrap\";\nimport Loading from \"./Components/Loading\";\nimport Sidebar from \"./Components/Sidebar\";\nimport Foo from \"./Components/Day\";\nimport DayModal from \"./Components/DayModal\";\nimport WeightTracker from \"./Components/WeightTracker/WeightTracker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data1, setData1] = useState();\n  const [data2, setData2] = useState();\n  const [loading, setLoading] = useState(true);\n  const [showWeightModal, setShowWeightModal] = useState(false);\n  const [showDayModal, setShowDayModal] = useState(false);\n  const fetchData = async () => {\n    const response1 = await fetch(\"http://localhost:5000/api/weight\");\n    const response2 = await fetch(\"http://localhost:5000/api/day\");\n    if (response1.ok && response2.ok) {\n      const data1 = await response1.json();\n      const data2 = await response2.json();\n      setData1(data1);\n      setData2(data2);\n      setLoading(false);\n    } else {\n      alert(\"Fuck\");\n    }\n  };\n  useEffect(() => {\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: \"auto\",\n        className: \"mt-4\",\n        children: /*#__PURE__*/_jsxDEV(Sidebar, {\n          setShowWeightModal: setShowWeightModal,\n          setShowDayModal: setShowDayModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        children: [/*#__PURE__*/_jsxDEV(WeightTracker, {\n          loading: loading,\n          data: data1,\n          show: showWeightModal,\n          setShow: setShowWeightModal,\n          reload: fetchData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: loading ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 24\n          }, this) : data2.map(d => /*#__PURE__*/_jsxDEV(Col, {\n            md: 4,\n            className: \"mt-4\",\n            children: /*#__PURE__*/_jsxDEV(Card, {\n              children: /*#__PURE__*/_jsxDEV(Foo, {\n                day: d,\n                reload: fetchData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DayModal, {\n      show: showDayModal,\n      setShow: setShowDayModal,\n      reload: fetchData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Skhvjm6GeGg/G/E67gWwka2cgU0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","useState","Card","Col","Container","Row","Loading","Sidebar","Foo","DayModal","WeightTracker","jsxDEV","_jsxDEV","App","_s","data1","setData1","data2","setData2","loading","setLoading","showWeightModal","setShowWeightModal","showDayModal","setShowDayModal","fetchData","response1","fetch","response2","ok","json","alert","fluid","children","md","className","fileName","_jsxFileName","lineNumber","columnNumber","data","show","setShow","reload","map","d","day","_c","$RefreshReg$"],"sources":["/home/chris/repos/lyfe/src/Lyfe.Web/src/App.tsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { Card, Col, Container, Row } from \"react-bootstrap\";\nimport { Weight } from \"./Interfaces/Weight\";\nimport Loading from \"./Components/Loading\";\nimport Sidebar from \"./Components/Sidebar\";\nimport { Day } from \"./Interfaces/Day\";\nimport Foo from \"./Components/Day\";\nimport DayModal from \"./Components/DayModal\";\nimport WeightTracker from \"./Components/WeightTracker/WeightTracker\";\n\nfunction App() {\n  const [data1, setData1] = useState<Weight[]>();\n  const [data2, setData2] = useState<Day[]>();\n  const [loading, setLoading] = useState(true);\n  const [showWeightModal, setShowWeightModal] = useState(false);\n  const [showDayModal, setShowDayModal] = useState(false);\n\n  const fetchData = async () => {\n    const response1 = await fetch(\"http://localhost:5000/api/weight\");\n    const response2 = await fetch(\"http://localhost:5000/api/day\")\n    \n    if (response1.ok && response2.ok) {\n      const data1 = await response1.json();\n      const data2 = await response2.json();\n\n      setData1(data1);\n      setData2(data2);\n      setLoading(false);\n    }\n    else {\n      alert(\"Fuck\");\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  return (\n    <Container fluid={true}>\n      <Row>\n        <Col md=\"auto\" className=\"mt-4\">\n          <Sidebar\n            setShowWeightModal={setShowWeightModal}\n            setShowDayModal={setShowDayModal}\n          />\n        </Col>\n\n        <Col>\n          <WeightTracker\n            loading={loading}\n            data={data1}\n            show={showWeightModal}\n            setShow={setShowWeightModal}\n            reload={fetchData}\n          />\n\n          <Row>\n            {loading ? <Loading /> : data2!.map(d => (\n              <Col md={4} className=\"mt-4\">\n                <Card>\n                  <Foo day={d} reload={fetchData} />\n                </Card>\n              </Col>\n            ))}\n          </Row>\n        </Col>\n      </Row>\n\n      <DayModal show={showDayModal} setShow={setShowDayModal} reload={fetchData} />\n    </Container>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}