{"ast":null,"code":"export function dateFormatter(d) {\n  const date = new Date(d);\n  const month = date.toLocaleDateString(\"en-AU\", {\n    month: \"short\"\n  }); // Jan\n  const day = date.toLocaleDateString(\"en-AU\", {\n    day: \"2-digit\"\n  }); // 01\n\n  return `${month} ${day}`; // Jan 01\n}\n\nexport function dataFormatter(d) {\n  return d.map(w => ({\n    \"Date\": dateFormatter(w.currentDate),\n    \"Weight\": w.currentWeight,\n    \"Goal Weight\": w.goalWeight\n  }));\n}\nexport function latest(d) {\n  return d.at(-1); // Get the last element from the array\n}\n\nexport function minValue(d) {\n  return Math.min(...d.map(w => w.goalWeight)) - 2;\n  ;\n}\nexport function maxValue(d) {\n  return Math.max(...d.map(w => w.currentWeight)) + 2;\n}\nexport function diff(d) {\n  return (latest(d).currentWeight - latest(d).goalWeight).toFixed(2);\n}","map":{"version":3,"names":["dateFormatter","d","date","Date","month","toLocaleDateString","day","dataFormatter","map","w","currentDate","currentWeight","goalWeight","latest","at","minValue","Math","min","maxValue","max","diff","toFixed"],"sources":["/home/chris/repos/lyfe/src/Lyfe.Web/src/Helpers/WeightTrackerHelpers.tsx"],"sourcesContent":["import { Weight } from \"../Interfaces/Weight\";\n\nexport function dateFormatter(d: Date) {\n  const date = new Date(d);\n  const month = date.toLocaleDateString(\"en-AU\", { month: \"short\" }); // Jan\n  const day = date.toLocaleDateString(\"en-AU\", { day: \"2-digit\" }); // 01\n\n  return `${month} ${day}`; // Jan 01\n}\n\nexport function dataFormatter(d: Weight[]) {\n  return d.map((w) => ({\n    \"Date\": dateFormatter(w.currentDate),\n    \"Weight\": w.currentWeight,\n    \"Goal Weight\": w.goalWeight\n  }));\n}\n\nexport function latest(d: Weight[]) {\n  return d.at(-1); // Get the last element from the array\n}\n\nexport function minValue(d: Weight[]) {\n  return Math.min(...d.map((w) => w.goalWeight)) - 2;;\n}\n\nexport function maxValue(d: Weight[]) {\n  return Math.max(...d.map((w) => w.currentWeight)) + 2;\n}\n\nexport function diff(d: Weight[]) {\n  return (latest(d)!.currentWeight - latest(d)!.goalWeight).toFixed(2);\n}\n"],"mappings":"AAEA,OAAO,SAASA,aAAaA,CAACC,CAAO,EAAE;EACrC,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,CAAC,CAAC;EACxB,MAAMG,KAAK,GAAGF,IAAI,CAACG,kBAAkB,CAAC,OAAO,EAAE;IAAED,KAAK,EAAE;EAAQ,CAAC,CAAC,CAAC,CAAC;EACpE,MAAME,GAAG,GAAGJ,IAAI,CAACG,kBAAkB,CAAC,OAAO,EAAE;IAAEC,GAAG,EAAE;EAAU,CAAC,CAAC,CAAC,CAAC;;EAElE,OAAQ,GAAEF,KAAM,IAAGE,GAAI,EAAC,CAAC,CAAC;AAC5B;;AAEA,OAAO,SAASC,aAAaA,CAACN,CAAW,EAAE;EACzC,OAAOA,CAAC,CAACO,GAAG,CAAEC,CAAC,KAAM;IACnB,MAAM,EAAET,aAAa,CAACS,CAAC,CAACC,WAAW,CAAC;IACpC,QAAQ,EAAED,CAAC,CAACE,aAAa;IACzB,aAAa,EAAEF,CAAC,CAACG;EACnB,CAAC,CAAC,CAAC;AACL;AAEA,OAAO,SAASC,MAAMA,CAACZ,CAAW,EAAE;EAClC,OAAOA,CAAC,CAACa,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB;;AAEA,OAAO,SAASC,QAAQA,CAACd,CAAW,EAAE;EACpC,OAAOe,IAAI,CAACC,GAAG,CAAC,GAAGhB,CAAC,CAACO,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACG,UAAU,CAAC,CAAC,GAAG,CAAC;EAAC;AACrD;AAEA,OAAO,SAASM,QAAQA,CAACjB,CAAW,EAAE;EACpC,OAAOe,IAAI,CAACG,GAAG,CAAC,GAAGlB,CAAC,CAACO,GAAG,CAAEC,CAAC,IAAKA,CAAC,CAACE,aAAa,CAAC,CAAC,GAAG,CAAC;AACvD;AAEA,OAAO,SAASS,IAAIA,CAACnB,CAAW,EAAE;EAChC,OAAO,CAACY,MAAM,CAACZ,CAAC,CAAC,CAAEU,aAAa,GAAGE,MAAM,CAACZ,CAAC,CAAC,CAAEW,UAAU,EAAES,OAAO,CAAC,CAAC,CAAC;AACtE"},"metadata":{},"sourceType":"module","externalDependencies":[]}